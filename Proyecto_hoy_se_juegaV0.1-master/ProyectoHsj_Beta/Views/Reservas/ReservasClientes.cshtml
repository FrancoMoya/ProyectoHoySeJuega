@model IEnumerable<ProyectoHsj_Beta.ViewsModels.ReservasClientesAdminGetViewModel>
@{
    Layout = "~/Views/Shared/Layout_admin.cshtml";
    ViewData["Title"] = "Reservas de Clientes";

    // Fecha de hoy y mañana para el agrupamiento, usando DateOnly
    var today = DateOnly.FromDateTime(DateTime.Today.AddHours(3)); // Obtiene la fecha de hoy como DateOnly
    var tomorrow = today.AddDays(1); // Mañana
    var futureDate = tomorrow.AddDays(1); // Día después de mañana
}

<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
<style>
    /* Tu estilo personalizado ya existente... */

    .event-group {
        margin-bottom: 30px;
    }

    .event-group h3 {
        color: #fff;
        background-color: #333;
        padding: 10px;
        border-radius: 5px;
    }

    .card {
        background-color: #444444;
        border: none;
        border-radius: 10px;
        margin-bottom: 10px; /* Separación de eventos */
        color: #ffffff;
        max-width: 100%;
    }
    body {
        background-color: gray;
    }
    .list-group-item {
        padding: 12px 13px; /* Aumenta el espaciado interno para hacer los botones más grandes */
        border: none; /* Elimina el borde de los elementos de lista */
        background-color: #343a40; /* Color de fondo gris para los botones */
        transition: background 0.2s; /* Transición suave para el color de fondo al pasar el mouse */
        font-size: 1.2rem; /* Aumenta el tamaño de la fuente para mayor legibilidad */
        border-radius: 8px; /* Bordes redondeados para un aspecto más moderno */
    }

    .card-body {
        padding: 7px 1.15rem 13px 1.15rem;
    }
    p {
        margin-bottom: 0.75rem;
    }
    /* Aseguramos que la vista en pantallas grandes se vea bien */
    @@media (min-width: 768px) {
        .grid-container {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 10px;
        }
    }

    /* Ajustes para pantallas pequeñas */
    @@media (max-width: 767px) {
        .d-flex {
            flex-direction: column;
        }

        /* Asegurar que el título esté sobre el botón */
        .d-flex h2 {
            order: -2;
        }

        .mb-sm-0 {
            margin-bottom: 0 !important;
            margin-bottom: 10px !important;
            width: 100%;
        }
    }
</style>

<div class="container mt-4">
    <!-- Contenedor para el título y el botón -->
    <div class="d-flex flex-column flex-sm-row justify-content-between align-items-center">
        <a asp-controller="Admin" asp-action="Index" class="btn btn-dark mb-2 mb-sm-0">Volver al Calendario</a>
        <a asp-controller="Reservas" asp-action="ReservasClientesHistorial" class="btn btn-danger mb-2 mb-sm-0">Ver HISTORIAL COMPLETO</a>
        <h2 style="color:white">Reservas creadas por Clientes</h2>
    </div>

    <div class="grid-container">

        <!-- Categoría: Hoy -->
        <div class="event-group" id="today-events">
            <h3>Reservas de Hoy</h3>
            @foreach (var item in Model.Where(e => e.FechaHorario == today))
            {
                <div class="card">
                    <div class="card-header">
                        ID: @item.Id | @item.NombreUsuario @item.ApellidoUsuario
                    </div>
                    <div class="card-body">
                        <p><strong>Creación:</strong> @item.FechaCreacion.ToString("HH:mm - dd/MM/yyyy")</p>
                        <p><strong>Celular:</strong> @item.Celular</p>
                        <p><strong>Fecha:</strong> @item.FechaHorario.ToString("dd-MM-yyyy")</p>
                        <p><strong>Horario:</strong> @item.HoraInicio.ToString("HH:mm") - @item.HoraFin.ToString("HH:mm")</p>

                        <div class="d-flex justify-content-end">
                            <button type="button" class="btn btn-warning btn-sm me-2" data-bs-toggle="modal" data-bs-target="#confirmCancelModal"
                                    data-fecha="@item.FechaHorario.ToString("dd-MM-yyyy")"
                                    data-inicio="@item.HoraInicio.ToString("HH:mm")"
                                    data-fin="@item.HoraFin.ToString("HH:mm")"
                                    data-id="@item.Id">
                                Cancelar
                            </button>
                        </div>
                    </div>
                </div>
            }
        </div>

        <!-- Categoría: Mañana -->
        <div class="event-group" id="tomorrow-events">
            <h3>Reservas de Mañana</h3>
            @foreach (var item in Model.Where(e => e.FechaHorario == tomorrow))
            {
                <div class="card">
                    <div class="card-header">
                        ID: @item.Id | @item.NombreUsuario @item.ApellidoUsuario
                    </div>
                    <div class="card-body">
                        <p><strong>Creación:</strong> @item.FechaCreacion.ToString("HH:mm - dd/MM/yyyy")</p>
                        <p><strong>Celular:</strong> @item.Celular</p>
                        <p><strong>Fecha:</strong> @item.FechaHorario.ToString("dd-MM-yyyy")</p>
                        <p><strong>Horario:</strong> @item.HoraInicio.ToString("HH:mm") - @item.HoraFin.ToString("HH:mm")</p>

                        <div class="d-flex justify-content-end">
                            <button type="button" class="btn btn-warning btn-sm me-2" data-bs-toggle="modal" data-bs-target="#confirmCancelModal"
                                    data-fecha="@item.FechaHorario.ToString("dd-MM-yyyy")"
                                    data-inicio="@item.HoraInicio.ToString("HH:mm")"
                                    data-fin="@item.HoraFin.ToString("HH:mm")"
                                    data-id="@item.Id">
                                Cancelar
                            </button>
                        </div>
                    </div>
                </div>
            }
        </div>

        <!-- Categoría: Futuros -->
        <div class="event-group" id="future-events">
            <h3>Reservas próximas</h3>
            @foreach (var item in Model.Where(e => e.FechaHorario > tomorrow))
            {
                <div class="card">
                    <div class="card-header">
                        ID: @item.Id | @item.NombreUsuario @item.ApellidoUsuario
                    </div>
                    <div class="card-body">
                        <p><strong>Creación:</strong> @item.FechaCreacion.ToString("HH:mm - dd/MM/yyyy")</p>
                        <p><strong>Celular:</strong> @item.Celular</p>
                        <p><strong>Fecha:</strong> @item.FechaHorario.ToString("dd-MM-yyyy")</p>
                        <p><strong>Horario:</strong> @item.HoraInicio.ToString("HH:mm") - @item.HoraFin.ToString("HH:mm")</p>

                        <div class="d-flex justify-content-end">
                            <button type="button" class="btn btn-warning btn-sm me-2" data-bs-toggle="modal" data-bs-target="#confirmCancelModal"
                                    data-fecha="@item.FechaHorario.ToString("dd-MM-yyyy")"
                                    data-inicio="@item.HoraInicio.ToString("HH:mm")"
                                    data-fin="@item.HoraFin.ToString("HH:mm")"
                                    data-id="@item.Id">
                                Cancelar
                            </button>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<!-- Modal de Cancelación -->
<div class="modal fade" id="confirmCancelModal" tabindex="-1" aria-labelledby="confirmCancelModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" style="color: black" id="confirmCancelModalLabel">Detalles</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
            </div>
            <div class="modal-body" style="color: black;">
                <strong>Detalles del evento:</strong><br><strong>Fecha:</strong> <span id="ObjectFechaCancel"></span><br><strong>Horario:</strong> <span id="ObjectHoraCancel"></span><br><strong>¿Seguro que deseas cancelar este evento?</strong>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                <form id="cancelForm" method="post" asp-action="CancelReserva">
                    <input type="hidden" name="id" id="cancelId" />
                    <button type="submit" class="btn btn-danger">Cancelar</button>
                </form>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/js/bootstrap.bundle.min.js"></script>

<script>
    var confirmCancelModal = document.getElementById('confirmCancelModal');

    confirmCancelModal.addEventListener('show.bs.modal', function (event) {
        var button = event.relatedTarget;
        var objectId = button.getAttribute('data-id');  // Obtener el ID del evento
        var objectFecha = button.getAttribute('data-fecha');
        var objectHoraInicio = button.getAttribute('data-inicio');
        var objectHoraFin = button.getAttribute('data-fin');
        var inputId = document.getElementById('cancelId');  // El input oculto en el formulario

        // Actualizamos los detalles en el modal de cancelación
        var objectFechaSpan = document.getElementById('ObjectFechaCancel');
        var objectHoraSpan = document.getElementById('ObjectHoraCancel');
        objectFechaSpan.textContent = objectFecha;
        objectHoraSpan.textContent = objectHoraInicio + ' a ' + objectHoraFin + 'hs';
        // Establecer los valores en los elementos del modal
        inputId.value = objectId;  // Asignar el ID al campo oculto

    });


</script>