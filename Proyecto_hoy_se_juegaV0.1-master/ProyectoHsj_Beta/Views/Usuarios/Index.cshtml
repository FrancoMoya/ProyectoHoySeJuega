@model IEnumerable<ProyectoHsj_Beta.ViewsModels.UsuariosGetViewModel>

@{
    ViewData["Title"] = "Lista de Usuarios";

    Layout = "~/Views/Shared/Layout_admin.cshtml";
}

<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
<style>
    body {
        margin: 0;
        padding: 0;
        height: 100vh;
        background-color: #212529;
    }

    .list-group-item {
        padding: 12px 13px;
        border: none;
        background-color: #343a40;
        transition: background 0.2s;
        font-size: 1.2rem;
        border-radius: 8px;
    }

    .table-container {
        background-color: #6c757d;
        color: #000;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
    }

    h2 {
        text-align: center;
        color: #333;
        font-weight: bold;
    }

    .search-bar {
        margin-bottom: 15px;
        width: 100%;
        max-width: 300px;
    }

    .btn-group .btn.active {
        background-color: #007bff;
        color: white;
    }

    .action-buttons {
        display: flex;
        justify-content: space-between;
        align-items: center;
        gap: 10px;
    }

    /* Estilos para los botones */
    .btn {
        border-radius: 5px;
        transition: background-color 0.3s, color 0.3s;
    }

    .btn-edit {
        background-color: #4CAF50;
        color: white;
    }

    .btn-edit:hover {
        background-color: #45a049;
    }

    .btn-detail {
        background-color: #2196F3;
        color: white;
    }

    .btn-detail:hover {
        background-color: #1e88e5;
    }

    .btn-delete {
        background-color: #f44336;
        color: white;
    }

    .btn-delete:hover {
        background-color: #e53935;
    }

    /* Tabla responsiva */
    .table-responsive {
        overflow-x: auto;
    }

    /* Convertir la tabla en tarjetas en pantallas pequeñas */
    @@media (max-width: 768px) {
        .table-responsive {
            display: none;
        }
        p{
            margin-bottom: 0.4rem
        }
        .user-card {
            background-color: #f8f9fa;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            margin-bottom: 10px !important;
            padding: 15px 15px 8px 15px;
        }

        .user-card .card-header {
            font-size: 1.2rem;
            font-weight: bold;
            background-color: lightslategrey;
            padding: 0.5rem 1rem 0.5rem 1rem;
        }

        .user-card .card-body {
            font-size: 0.9rem;
            padding: 0.5rem 0.5rem 0px 0.5rem;
        }

        .search-bar,
        .btn-group {
            width: 100%;
            display: flex;
            justify-content: space-between;
            gap: 10px;
            margin-bottom: 15px;
        }

        .btn-group {
            justify-content: flex-start;
        }
    }

</style>

<div class="container mt-4">
    <!-- Barra de búsqueda y botones de filtrado (visibles en todas las pantallas) -->
    <div class="search-filter-container">
        <input type="text" id="searchInput" class="form-control search-bar" placeholder="Buscar por Apellido o ID" />
        <div class="btn-group mb-3" role="group" aria-label="Filtrar usuarios">
            <button id="btnTodos" type="button" class="btn btn-outline-info">Todos</button>
            <button id="btnActivos" type="button" class="btn btn-outline-success">Activos</button>
            <button id="btnInactivos" type="button" class="btn btn-outline-danger">Inactivos</button>
        </div>
    </div>

    <!-- Card View for Mobile -->
    <div class="row d-block d-md-none" id="userCards">
        @foreach (var item in Model)
        {
            <div class="col-12 mb-4 user-card" data-id="@item.IdUsuario" data-nombre="@item.NombreUsuario" data-apellido="@item.ApellidoUsuario" data-estado="@item.Activo.ToString().ToLower()">
                <div class="card-header">
                    ID: @item.IdUsuario | @item.NombreUsuario @item.ApellidoUsuario
                </div>
                <div class="card-body">
                    <p><strong>Correo:</strong> @item.CorreoUsuario</p>
                    <p><strong>Celular:</strong> @item.TelefonoUsuario</p>
                    <p><strong>Rol:</strong> @item.RolUsuario</p>
                    <p><strong>Estado:</strong>
                        @if (item.Activo)
                        {
                            <span style="color: green;">Activo <i class="fas fa-check"></i></span>
                        }
                        else
                        {
                            <span style="color: red;">Inactivo <i class="fas fa-times"></i></span>
                        }
                    </p>
                    <p><strong>Última sesión:</strong> @item.UltimaSesion.ToString("dd-MM-yyyy")</p>
                </div>
                <div class="action-buttons">
                    <a asp-action="Edit" asp-route-id="@item.IdUsuario" class="btn btn-edit btn-sm">
                        <i class="fas fa-edit"></i> Editar
                    </a>
                    @if (!@item.Activo)
                    {
                        <button type="button" class="btn btn-delete btn-sm" data-bs-toggle="modal" data-bs-target="#confirmDeleteModal"
                                data-id="@item.IdUsuario" data-nombre="@item.NombreUsuario" data-apellido="@item.ApellidoUsuario">
                            <i class="fas fa-trash-alt"></i> Eliminar
                        </button>
                    }
                </div>
            </div>
        }
    </div>

    <!-- Table View for Desktop -->
    <div class="table-responsive table-container d-none d-md-block" id="userTable">
        <table class="table table-striped table-bordered table-dark">
            <thead class="thead-light">
                <tr>
                    <th>ID</th>
                    <th>Nombre</th>
                    <th>Apellido</th>
                    <th>Correo</th>
                    <th>Celular</th>
                    <th>Rol</th>
                    <th>Activo</th>
                    <th>Últ sesión</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@item.IdUsuario</td>
                        <td>@item.NombreUsuario</td>
                        <td>@item.ApellidoUsuario</td>
                        <td>@item.CorreoUsuario</td>
                        <td>@item.TelefonoUsuario</td>
                        <td>@item.RolUsuario</td>
                        <td class="text-center user-status @((item.Activo) ? "active" : "inactive")">
                            @if (item.Activo)
                            {
                                <i class="fas fa-check" style="color: green;"></i>
                            }
                            else
                            {
                                <i class="fas fa-times" style="color: red;"></i>
                            }
                        </td>
                        <td>@item.UltimaSesion.ToString("dd-MM-yyyy")</td>
                        <td>
                            <div class="action-buttons">
                                <a asp-action="Edit" asp-route-id="@item.IdUsuario" class="btn btn-edit btn-sm">
                                    <i class="fas fa-edit"></i> Editar
                                </a>
                                @if (!@item.Activo)
                                {
                                    <button type="button" class="btn btn-delete btn-sm" data-bs-toggle="modal" data-bs-target="#confirmDeleteModal"
                                            data-id="@item.IdUsuario" data-nombre="@item.NombreUsuario" data-apellido="@item.ApellidoUsuario">
                                        <i class="fas fa-trash-alt"></i> Eliminar
                                    </button>
                                }
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<!-- Modal de confirmación para eliminar -->
<div class="modal fade" id="confirmDeleteModal" tabindex="-1" aria-labelledby="confirmDeleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmDeleteModalLabel">Confirmar Eliminación</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
            </div>
            <div class="modal-body">
                ¿Estás seguro de que deseas eliminar a <span id="deleteObjectName"></span> <span id="deleteObjectSurname"></span>?<br>(No se puede deshacer esta acción una vez realizada)
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <form id="deleteForm" method="post" asp-action="Delete">
                    <input type="hidden" name="id" id="deleteId"/>
                    <button type="submit" class="btn btn-danger">Eliminar</button>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const searchInput = document.getElementById("searchInput");

        // Script para capturar el ID y nombre del objeto a eliminar y mostrarlo en el modal
        var confirmDeleteModal = document.getElementById('confirmDeleteModal');
        confirmDeleteModal.addEventListener('show.bs.modal', function (event) {
            var button = event.relatedTarget; // El botón que activó el modal
            var objectId = button.getAttribute('data-id'); // Obtener el ID del usuario
            var objectName = button.getAttribute('data-nombre'); // Obtener el nombre del usuario
            var objectSurname = button.getAttribute('data-apellido');
            var inputId = document.getElementById('deleteId'); // Campo oculto donde se almacenará el ID
            var objectNameSpan = document.getElementById('deleteObjectName'); // Donde se mostrará el nombre
            var objectSurnameSpan = document.getElementById('deleteObjectSurname');

            // Actualizar el valor del campo oculto y el nombre en el modal
            inputId.value = objectId;
            objectNameSpan.textContent = objectName;
            objectSurnameSpan.textContent = objectSurname;
        });

        // Función de filtrado unificada
        function filterUsers() {
            const query = searchInput.value.toLowerCase();
            const userCards = document.querySelectorAll('.user-card');
            const userRows = document.querySelectorAll('tbody tr');

            // Filtrar en vista móvil (tarjetas)
            userCards.forEach(card => {
                const apellido = card.dataset.apellido.toLowerCase();
                const id = card.dataset.id.toString();  // Convertir ID a cadena para comparación
                if (apellido.includes(query) || id.includes(query)) {
                    card.style.display = 'block';
                } else {
                    card.style.display = 'none';
                }
            });

            // Filtrar en vista de escritorio (tabla)
            userRows.forEach(row => {
                const apellido = row.cells[2].innerText.toLowerCase();  // Columna Apellido
                const id = row.cells[0].innerText.toLowerCase();  // Columna ID
                if (apellido.includes(query) || id.includes(query)) {
                    row.style.display = '';  // Mostrar la fila
                } else {
                    row.style.display = 'none';  // Ocultar la fila
                }
            });
        }

        // Agregar evento de búsqueda
        searchInput.addEventListener('input', filterUsers);

        // Función para mostrar u ocultar elementos de acuerdo con el estado
        function filterUsersByStatus(estado) {
            let userCards = document.querySelectorAll('.user-card');
            let userRows = document.querySelectorAll('tbody tr');

            userCards.forEach(card => {
                const estadoCard = card.dataset.estado === 'true';
                if (estado === null || estado === estadoCard) {
                    card.style.display = 'block';
                } else {
                    card.style.display = 'none';
                }
            });

            userRows.forEach(row => {
                const estadoRow = row.querySelector('.user-status').classList.contains('active');
                if (estado === null || estado === estadoRow) {
                    row.style.display = '';  // Mostrar la fila
                } else {
                    row.style.display = 'none';  // Ocultar la fila
                }
            });
        }

        // Filtrado por estado de usuario
        document.getElementById('btnTodos').addEventListener('click', function () {
            filterUsersByStatus(null); // Mostrar todos
            setActiveButton('btnTodos');
        });

        document.getElementById('btnActivos').addEventListener('click', function () {
            filterUsersByStatus(true); // Solo activos
            setActiveButton('btnActivos');
        });

        document.getElementById('btnInactivos').addEventListener('click', function () {
            filterUsersByStatus(false); // Solo inactivos
            setActiveButton('btnInactivos');
        });

        // Función para resaltar el botón activo
        function setActiveButton(activeButtonId) {
            const buttons = document.querySelectorAll('.btn-group .btn');
            buttons.forEach(button => {
                button.classList.remove('active');
            });
            document.getElementById(activeButtonId).classList.add('active');
        }

        // Ejecutar al cargar la página
        filterUsersByStatus(null);

        // Ajustar el filtro cuando se cambia el tamaño de la ventana
        window.addEventListener('resize', function () {
            filterUsersByStatus(null);
        });
    });

</script>



