@{
    Layout = "~/Views/Shared/Layout_admin.cshtml";

    ViewData["Title"] = "Reservas creadas por Admin";
}

<style>
        /* General */
        body {
            background-color: #333 !important;  /* Fondo oscuro */
            color: #fff;  /* Texto blanco para contraste */
            font-family: 'Roboto', sans-serif;
        }
        h2 {
            color: #f1f1f1;
            text-align: center;
            margin-top: 20px;
            margin-bottom: 30px;
        }

        #calendar {
            max-width: 90%;
            margin: 0 auto;
            border: 1px solid #444;
            border-radius: 10px;
            overflow: hidden;
            background-color: #2d2d2d;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }
            /* Cambia el cursor a una mano (puntero de enlace) sobre las fechas del calendario */
            #calendar .fc-day {
                cursor: pointer;
            }
        /* Modificar las celdas del calendario */
        #calendar .fc-daygrid-day {
            background-color: #3e3e3e; /* Fondo de las celdas */
            color: #ccc; /* Color de texto claro */
        }
        #calendar .fc-daygrid-day-number {
        color: #fff; /* Número de día blanco */
        }
        /* Modal */
        /* Resaltar el día seleccionado */
        #calendar .fc-daygrid-day.fc-day-today {
            background-color: #007bff;  /* Fondo azul para el día actual */
            color: #fff; /* Texto blanco */
        }
        /* Cabecera del calendario */
        .fc-toolbar {
            background-color: #444;  /* Fondo oscuro en la cabecera */
            color: #fff;  /* Texto blanco */
        }
        .fc-toolbar-title {
        color: #fff;  /* Título en blanco */
        text-transform: uppercase;
        }
        /* Botones de la cabecera */
        .fc-button {
            background-color: #555;
            border-color: #555;
            color: #fff;
        }
        .fc-button:hover {
        background-color: #007bff;
        border-color: #007bff;
        }
        /* Eventos */
        .fc-event {
            background-color: #007bff;  /* Fondo de los eventos */
            color: white;  /* Texto blanco */
            border-radius: 5px;
            padding: 5px;
        }
        .fc-event:hover {
        background-color: #0056b3; /* Cambio de color al pasar el mouse */
        }
        /* Hacer los nombres de los días en mayúsculas */
        .fc-col-header-cell {
            text-transform: uppercase;
        }
        .modal-content {
            background-color: #444;  /* Fondo oscuro en el modal */
            color: #f1f1f1;  /* Texto blanco */
            border-radius: 10px; /*!!!*/
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        }

        .modal-header {
            background-color: #333;
            color: #fff;
        }

        .modal-body {
            color: #ddd;
        }

        .list-group-item {
            font-size: 1.17rem; /*!!!*/
            background-color: #555;  /* Fondo gris oscuro para los items */
            color: #fff;  /* Texto blanco */
            border: 1px solid #444;  /* Borde más oscuro */
        }

        /* Estilos específicos para la vista de reservas dentro del modal!!! */
        #reservationDetailModal .list-group-item {
            background-color: #2b2b2b; /* Color de fondo blanco */
            padding: 20px; /* Aumenta el padding para dar más espacio a los contenidos */
            border: 1px solid #dee2e6; /* Borde gris claro */
            border-radius: 8px; /* Bordes redondeados */
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); /* Sombra sutil para dar profundidad */
            margin-bottom: 10px; /* Espacio entre elementos */
        }

            #reservationDetailModal .list-group-item p {
                margin: 0; /*!!! Asegura que no haya márgenes adicionales dentro de los párrafos */
            }

            /* Hover sobre los elementos de la lista */
            #reservationDetailModal .list-group-item:hover {
                background-color: #1f1f1f; /* Resalta el fondo cuando el cursor pasa por encima */
            }

            /* Estilo para los botones dentro de cada item!!! */
            #reservationDetailModal .list-group-item .btn {
                border-radius: 8px; /* Bordes redondeados en los botones */
                margin-top: 5px;
            }
            /* Botones en el modal */
            #reservationDetailModal .btn {
                border-radius: 8px;
            }

        .fc-toolbar-title {
            text-transform: uppercase; /* Pone en mayúsculas el nombre del mes */
        }

    /* Estilos comunes para el botón de "Ver Historial Completo" */
    .btn-ver-historial {
        margin-top: 20px; /* Espacio superior en móviles */
    }


    /* Estilos para dispositivos pequeños (móviles) */
    @@media (max-width: 767px) {
        .btn-ver-historial {
            position: center;
            margin-top: 20px; /* Espacio en la parte superior */
            margin-bottom: 15px; /* Espacio inferior */
        }
    }

            /* Diseño Responsivo */
        @@media (max-width: 768px) {
        #calendar {
            max-width: 100%;
            margin: 10px auto;
            /* Asegura que el calendario ocupe más espacio verticalmente */
            min-height: 80vh; /* Ajusta el valor según lo que necesites */
            height: auto; /* Si no quieres que se ajuste a un valor fijo, puedes usar auto */
        }

        .fc-toolbar {
            flex-direction: column;
        }

        .fc-toolbar-title {
            font-size: 1.2em;
            margin-bottom: 10px;
        }

        .modal-dialog {
            margin: 10px;
        }

        .modal-body p {
            font-size: 0.9em;
        }

            .d-flex {
                flex-direction: column;
            }
                /* Asegurar que el título esté sobre el botón */
                .d-flex h2 {
                    order: -2;
                }

            .mb-sm-0 {
                margin-bottom: 0 !important;
                margin-bottom: 10px !important;
                width: 100%;
            }

            h2 {
                color: #f1f1f1;
                text-align: center;
                margin-top: 7px;
                margin-bottom: 8px;
            }

        #reservationDetailModal .list-group-item .btn {
            border-radius: 4px; /* Bordes redondeados en los botones */
        }
    }


</style>

<div class="d-flex flex-column flex-sm-row justify-content-between align-items-center">
    <a asp-controller="Evento" asp-action="Index" class="btn btn-dark mb-2 mb-sm-0">Ver en forma de Tarjetas</a>
    <a asp-action="Create" class="btn btn-primary mb-2 mb-sm-0">Nueva RESERVA</a>
    <h2>Reservas creadas por Administración</h2>
</div>

<!-- Contenedor del Calendario -->
<div id="calendar"></div>

<!-- Modal para Detalles de la Reserva -->
<div class="modal fade" id="reservationDetailModal" tabindex="-1" aria-labelledby="reservationDetailModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="reservationDetailModalLabel">DETALLES</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Contenido del modal generado dinámicamente -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
            </div>
        </div>
    </div>
</div>
<div class="d-flex flex-column flex-sm-row justify-content-between align-items-center">
    <a asp-controller="Evento" asp-action="ReservasAdminHistorial" class="btn btn-danger mb-2 mb-sm-0 btn-ver-historial">Ver HISTORIAL COMPLETO</a>
</div>
<!-- Scripts de FullCalendar y Bootstrap -->
<link href="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.8/main.min.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.15/index.global.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js"></script>

<!-- Scripts -->
<script>
    document.addEventListener('DOMContentLoaded', function () {
        let calendarEl = document.getElementById('calendar');
        let calendar = new FullCalendar.Calendar(calendarEl, {
            locale: 'es',
            initialView: 'timeGridWeek',  // Siempre iniciar en vista de semana
            buttonText: { today: 'Hoy' },
            events: function (fetchInfo, successCallback, failureCallback) {
                fetch('/Evento/GetReservas')
                    .then(response => response.json())
                    .then(events => {

                        // Filtra los eventos para mostrar solo los confirmados
                        const confirmedEvents = events.filter(event => event.estado === 'CONFIRMADA');
                        successCallback(confirmedEvents);
                    })
                    .catch(error => {
                        console.error('Error al obtener los eventos:', error);
                        failureCallback(error);
                    });
            },

            buttonText: {
                today: 'Hoy',
                month: 'Mes',
                week: 'Semana',
                day: 'Día',
                list: 'Lista' // Esto es para la vista de lista si la estás utilizando
            },

            // Configura el formato del título del mes en mayúsculas
            headerToolbar: {
                left: 'prev,next today',
                center: 'title',
                right: 'dayGridMonth,timeGridWeek,timeGridDay'
            },
            titleFormat: {
                month: 'long', // Formato largo para el mes (ej. "enero", "febrero", etc.)
                year: 'numeric'
            },
            eventTimeFormat: {
                hour: '2-digit',
                minute: '2-digit',
                hour12: false // Si prefieres usar el formato de 24 horas
            },
            // Configura las horas visibles en las vistas 'timeGrid'
            slotMinTime: "12:00:00", // Hora de inicio visible (ejemplo: 08:00 AM)
            slotMaxTime: "23:59:00", // Hora de fin visible (ejemplo: 08:00 PM)
            slotLabelInterval: '01:00', // Intervalo de las horas (cada 1 hora)
            slotDuration: '00:30:00', // Duración de cada franja horaria (30 minutos)
            allDaySlot: false, // Ocultar el slot de "Todo el día"

            // Mostrar las horas en el lado izquierdo
            slotEventOverlap: false, // Evitar que los eventos se superpongan

            // Este evento cubre clics en toda la celda
            dateClick: function (info) {
                const reservasEnFecha = calendar.getEvents().filter(
                    r => new Date(r.start).toDateString() === info.date.toDateString()
                );

                let reservasHtml = '<ul class="list-group">';
                // Formateamos la fecha que se tocó a un formato legible (por ejemplo: "Martes, 17 de Octubre de 2024")
                const fechaFormateada = info.date.toLocaleDateString('es-ES', {
                    weekday: 'long',
                    day: 'numeric',
                    month: 'long',
                    year: 'numeric'
                });

                if (reservasEnFecha.length > 0) {
                    reservasEnFecha.forEach(reserva => {
                        const showCancelButton = reserva.extendedProps.estado === "CONFIRMADA";
                        reservasHtml += `
                                <li class="list-group-item">
                                    <p><strong>ID evento:</strong> ${reserva.extendedProps.idReserva}</p>
                                    <p><strong>Descripción:</strong> ${reserva.extendedProps.usuarioNombre}</p>
                                    <p><strong>Celular:</strong> ${reserva.extendedProps.usuarioTelefono}</p>
                                    <p><strong>Estado:</strong> ${reserva.extendedProps.estado}</p>
                                        <p><strong>Fecha:</strong> ${new Date(reserva.start).toLocaleDateString()} - ${new Date(reserva.start).toLocaleTimeString()}hs</p>
                                    <div class="d-flex justify-content-end">
                                        ${showCancelButton ? `<button class="btn btn-warning btn-sm me-2 cancelar-reserva-btn" data-id="${reserva.extendedProps.idReserva}">Cancelar</button>` : ""}
                                    </div>
                                </li>
                            `;
                    });
                } else {
                    reservasHtml = `<p>No hay reservas para la fecha: <strong>${fechaFormateada}</strong>.</p>`;
                }

                reservasHtml += '</ul>';
                document.querySelector('#reservationDetailModal .modal-body').innerHTML = reservasHtml;

                const modal = new bootstrap.Modal(document.getElementById('reservationDetailModal'));
                modal.show();

                // Funcionalidad para cancelar reserva
                document.querySelectorAll('.cancelar-reserva-btn').forEach(button => {
                    button.addEventListener('click', function () {
                        cancelarReserva(this.dataset.id);
                    });
                });

            },

            eventClick: function (info) {
                const reserva = info.event.extendedProps;
                let reservasHtml = '<ul class="list-group">';

                reservasHtml += `
                        <li class="list-group-item">
                            <p><strong>ID evento:</strong> ${reserva.idReserva}</p>
                            <p><strong>Descripción:</strong> ${reserva.usuarioNombre}</p>
                            <p><strong>Celular:</strong> ${reserva.usuarioTelefono}</p>
                            <p><strong>Estado:</strong> ${reserva.estado}</p>
                                <p><strong>Fecha:</strong> ${new Date(info.event.start).toLocaleDateString()} - ${new Date(info.event.start).toLocaleTimeString()}hs</p>
                            <div class="d-flex justify-content-end">
                                ${reserva.estado === "CONFIRMADA" ? `<button class="btn btn-warning btn-sm me-2 cancelar-reserva-btn" data-id="${reserva.idReserva}">Cancelar</button>` : ""}
                            </div>
                        </li>
                    `;

                reservasHtml += '</ul>';
                document.querySelector('#reservationDetailModal .modal-body').innerHTML = reservasHtml;

                const modal = new bootstrap.Modal(document.getElementById('reservationDetailModal'));
                modal.show();

                document.querySelectorAll('.cancelar-reserva-btn').forEach(button => {
                    button.addEventListener('click', function () {
                        cancelarReserva(this.dataset.id);
                    });
                });

                document.querySelectorAll('.eliminar-reserva-btn').forEach(button => {
                    button.addEventListener('click', function () {
                        eliminarReserva(this.dataset.id);
                    });
                });
            }
        });

        calendar.render();

        function cancelarReserva(reservaId) {
            if (confirm('¿Estás seguro de cancelar este evento?')) {
                fetch(`/Evento/CancelConfirmedCalendar/${reservaId}`, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' }
                })
                    .then(response => response.ok ? location.reload() : alert('Error al cancelar reserva'))
                    .catch(console.error);
            }
        }
    });
</script>



