@model ProyectoHsj_Beta.Models.EventoRecurrente

@{
    Layout = "~/Views/Shared/Layout_admin.cshtml";
    ViewData["Title"] = "Crear reserva fija";
}

<h2 class="mb-4">CREAR RESERVA FIJA</h2>
<!-- Mostrar mensaje de error si existe -->
@if (TempData["Message"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["Message"]
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}
<form asp-action="CrearFijos" method="post">
    
    <div class="card p-4 mb-4">
        <div class="form-group">
            <label for="Nombre" class="form-label">Nombre de la reserva</label>
            <input type="text" class="form-control" id="Nombre" name="Nombre" required />
        </div>

        <div class="form-group mt-3">
            <label for="Descripcion" class="form-label">Descripción</label>
            <textarea class="form-control" id="Descripcion" name="Descripcion" rows="4" required></textarea>
        </div>

        <div class="form-group mt-3">
            <label for="CorreoCliente" class="form-label">Correo del cliente</label>
            <input type="email" class="form-control" id="CorreoCliente" name="CorreoCliente" required />
        </div>

        <div class="form-group mt-3">
            <label for="TelefonoCliente" class="form-label">Celular del cliente</label>
            <input type="tel" class="form-control" id="TelefonoCliente" name="TelefonoCliente" required />
        </div>

        <div class="form-group mt-3">
            <label for="FechaInicio" class="form-label">Fecha de inicio</label>
            <input type="date" class="form-control" id="FechaInicio" name="FechaInicio" required />
        </div>

        <div class="form-group mt-3">
            <label for="FechaFin" class="form-label">Fecha de fin</label>
            <input type="date" class="form-control" id="FechaFin" name="FechaFin" required />
        </div>

        <div class="form-group mt-3">
            <label for="HoraInicio" class="form-label">Hora de inicio (En la reserva)</label>
            <select class="form-control" id="HoraInicio" name="HoraInicio" required>
                <!-- Opciones dinámicas de horas -->
                @for (int i = 10; i <= 23; i++)
                {
                    var hora = i.ToString("D2"); // Formatea la hora para que tenga dos dígitos
                    <option value="@hora:00">@hora:00</option>
                }
            </select>
        </div>

        <div class="form-group mt-3">
            <label for="DiaSemana" class="form-label">Día de la Semana (En la reserva)</label>
            <select class="form-control" id="DiaSemana" name="DiaSemana" required>
                <option value="0">Domingo</option>
                <option value="1">Lunes</option>
                <option value="2">Martes</option>
                <option value="3">Miércoles</option>
                <option value="4">Jueves</option>
                <option value="5">Viernes</option>
                <option value="6">Sábado</option>
            </select>
        </div>

        <button type="submit" class="btn btn-primary mt-4">Crear Evento Recurrente</button>
    </div>
</form>

@section Styles {
    <style>
        /* Estilo personalizado para los labels */
        .form-label {
            font-weight: bold;
            color: #333; /* Color oscuro para buen contraste */
            font-size: 1rem;
        }

        /* Estilos para mejorar la apariencia de los campos del formulario */
        .form-control {
            border-radius: 0.375rem;
            border: 1px solid #ced4da; /* Borde suave */
            padding: 0.75rem; /* Relleno adecuado */
        }

            .form-control:focus {
                border-color: #80bdff; /* Color cuando el campo está enfocado */
                box-shadow: 0 0 0 0.25rem rgba(38, 143, 255, 0.5); /* Sombra de enfoque */
            }

        /* Asegurar que los campos de entrada y botón tengan una distancia uniforme */
        .card {
            background-color: #f8f9fa;
            border: 1px solid #e0e0e0;
            border-radius: 0.5rem;
        }

        /* Botón con un diseño más visible */
        .btn-primary {
            background-color: #007bff;
            border-color: #007bff;
            padding: 0.5rem 1.25rem;
            font-size: 1rem;
            border-radius: 0.25rem;
        }

            .btn-primary:hover {
                background-color: #0056b3;
                border-color: #004085;
            }

        /* Añadir un poco de separación entre los elementos */
        .form-group {
            margin-bottom: 1rem;
        }

        /* Espaciado entre el título y el formulario */
        h2.mb-4 {
            margin-bottom: 2rem;
            font-size: 2rem;
            font-weight: bold;
        }
    </style>
}

@section Scripts {
    <!-- Incluir jQuery (necesario para los componentes de Bootstrap) -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <!-- Incluir el archivo JS de Bootstrap -->
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Obtener la fecha actual en formato local YYYY-MM-DD
            const today = new Date();
            const yyyy = today.getFullYear();
            const mm = String(today.getMonth() + 1).padStart(2, '0');  // Meses de 0 a 11
            const dd = String(today.getDate()).padStart(2, '0');  // Día del mes

            // Formatear la fecha en formato YYYY-MM-DD
            const formattedDate = `${yyyy}-${mm}-${dd}`;

            // Establecer el valor mínimo para los campos FechaInicio y FechaFin
            document.getElementById('FechaInicio').setAttribute('min', formattedDate);
            document.getElementById('FechaFin').setAttribute('min', formattedDate);

            // Limitar las horas disponibles en el campo "Hora de inicio" entre las 12:00 y las 23:00
            const horaInicioField = document.getElementById('HoraInicio');
            let horasDisponibles = '';

            // Crear las opciones de hora de 12:00 a 23:00
            for (let i = 12; i <= 23; i++) {
                let hora = i < 10 ? '0' + i : i;  // Aseguramos que las horas estén con dos dígitos
                horasDisponibles += `<option value="${hora}:00">${hora}:00</option>`;
            }

            // Colocamos las horas generadas en el campo select
            horaInicioField.innerHTML = horasDisponibles;
        });
    </script>
}



